import type { Config } from "tailwindcss";
const plugin = require("tailwindcss/plugin");

export default {
  content: ["./app/**/*.{js,jsx,ts,tsx}"],
  theme: {
    extend: {
      animation: {
        fadeInLeft: "fadeInLeft 1s ease-in-out",
        fadeInRight: "fadeInRight 1s ease-in-out",
        fadeInUp: "fadeInUp 1s ease-out",
        fadeInDown: "fadeInDown 1s ease-out",
        fadeIn: "fadeIn 1s ease-out",
        bounceIn: "bounceIn 1s ease-out",
        bounceInDown: "bounceInDown 1s ease-out",
        endless: "endless 20s linear infinite",
      },
      textShadow: {
        sm: "0 1px 2px var(--tw-shadow-color)",
        DEFAULT: "0 2px 4px var(--tw-shadow-color)",
        lg: "0 8px 16px var(--tw-shadow-color)",
      },
    },
    screens: {
      xxs: "320px",
      xss: "400px",
      xs: "480px",
      sm: "640px",
      md: "768px",
      lg: "1024px",
      xl: "1280px",
      "2xl": "1536px",
    },
    spacing: {
      px: "1px",
      "0": "0px",
      "0.5": "0.125rem",
      "1": "0.25rem",
      "1.5": "0.375rem",
      "2": "0.5rem",
      "2.5": "0.625rem",
      "3": "0.75rem",
      "3.5": "0.875rem",
      "4": "1rem",
      "5": "1.25rem",
      "6": "1.5rem",
      "7": "1.75rem",
      "8": "2rem",
      "9": "2.25rem",
      "10": "2.5rem",
      "11": "2.75rem",
      "12": "3rem",
      "14": "3.5rem",
      "15": "3.75rem",
      "16": "4rem",
      "17": "4.25rem",
      "18": "4.5rem",
      "20": "5rem",
      "22": "5.5rem",
      "24": "6rem",
      "26": "6.5rem",
      "28": "7rem",
      "30": "7.5rem",
      "32": "8rem",
      "34": "8.5rem",
      "36": "9rem",
      "40": "10rem",
      "44": "11rem",
      "48": "12rem",
      "52": "13rem",
      "56": "14rem",
      "60": "15rem",
      "64": "16rem",
      "72": "18rem",
      "80": "20rem",
      "96": "24rem",
    },
    backdropBrightness: (theme) => theme("brightness"),
    backdropContrast: (theme) => theme("contrast"),
    backdropGrayscale: (theme) => theme("grayscale"),
    backdropHueRotate: (theme) => theme("hueRotate"),
    backdropInvert: (theme) => theme("invert"),
    backdropOpacity: (theme) => theme("opacity"),
    backdropSaturate: (theme) => theme("saturate"),
    backdropSepia: (theme) => theme("sepia"),
    backgroundColor: (theme) => ({
      ...theme("colors"),
      body: "#fff",
    }),
    backgroundImage: {
      none: "none",
      "gradient-to-t": "linear-gradient(to top, var(--tw-gradient-stops))",
      "gradient-to-tr":
        "linear-gradient(to top right, var(--tw-gradient-stops))",
      "gradient-to-r": "linear-gradient(to right, var(--tw-gradient-stops))",
      "gradient-to-br":
        "linear-gradient(to bottom right, var(--tw-gradient-stops))",
      "gradient-to-b": "linear-gradient(to bottom, var(--tw-gradient-stops))",
      "gradient-to-bl":
        "linear-gradient(to bottom left, var(--tw-gradient-stops))",
      "gradient-to-l": "linear-gradient(to left, var(--tw-gradient-stops))",
      "gradient-to-tl":
        "linear-gradient(to top left, var(--tw-gradient-stops))",
      "gradient-blue": "linear-gradient(135deg, #5ECDEF 0%, #ED1378 100%)",
      "gradient-red":
        "linear-gradient(109deg, rgba(249,234,237,1) 0%, rgba(236,75,145,1) 60%, rgba(227,101,164,1) 100%)",
      "gradient-red-light": "linear-gradient(180deg, #F9D1AA 0%, #EF1460 100%)",
      "gradient-orange-light":
        "linear-gradient(180deg, #F9D1AA 0%, #EF1460 200%)",
      "gradient-orange": "linear-gradient(98.24deg, #FC8B13 0%, #FA35C1 100%)",
      "gradient-green":
        "linear-gradient(104deg, rgba(223,244,244,1) 0%, rgba(60,231,181,1) 40%)",
      "gradient-green-dark":
        "linear-gradient(98.24deg, #06E992 0%, #0289EB 100%)",
      "gradient-pink": "linear-gradient(98.24deg, #C9275A 0%, #DD15E8 100%)",
      "gradient-aqua": "linear-gradient(98.24deg, #55F7DC 0%, #5BC9F9 100%)",
      "gradient-radial-gray":
        "radial-gradient(50% 50% at 50% 50%, rgba(243, 244, 246, 0) 0%, #F3F4F6 100%)",
      "gradient-radial-white":
        "radial-gradient(50% 50% at 50% 50%, rgba(255, 255, 255, 0) 0%, #FFFFFF 100%)",
      "gradient-radial-dark":
        "radial-gradient(50% 50% at 50% 50%, rgba(17, 24, 39, 0) 0%, #111827 100%)",
      "gradient-radial-dark-light":
        "radial-gradient(50% 50% at 50% 50%, rgba(31, 41, 55, 0) 0%, #1F2937 100%)",
    },
    backgroundOpacity: (theme) => theme("opacity"),
    backgroundPosition: {
      bottom: "bottom",
      center: "center",
      left: "left",
      "left-bottom": "left bottom",
      "left-top": "left top",
      right: "right",
      "right-bottom": "right bottom",
      "right-top": "right top",
      top: "top",
    },
    backgroundSize: {
      auto: "auto",
      cover: "cover",
      contain: "contain",
    },
    blur: {
      0: "0",
      none: "0",
      sm: "4px",
      DEFAULT: "20px",
      md: "16px",
      lg: "24px",
      xl: "28px",
      "2xl": "40px",
      "3xl": "64px",
    },
    backdropBlur: (theme) => theme("blur"),
    brightness: {
      0: "0",
      50: ".5",
      75: ".75",
      90: ".9",
      95: ".95",
      100: "1",
      105: "1.05",
      110: "1.1",
      125: "1.25",
      150: "1.5",
      200: "2",
    },
    borderColor: (theme) => ({
      ...theme("colors"),
      DEFAULT: "#e5e5e5",
    }),
    borderOpacity: (theme) => theme("opacity"),
    borderRadius: {
      none: "0",
      sm: "0.125rem",
      DEFAULT: "0.25rem",
      md: "0.375rem",
      lg: "0.5rem",
      xl: "0.75rem",
      "2xl": "0.875rem",
      "3xl": "1rem",
      "4xl": "1.25rem",
      "5xl": "1.5rem",
      "6xl": "2.125rem",
      full: "9999px",
    },
    borderWidth: {
      DEFAULT: "1px",
      "0": "0",
      "2": "2px",
      "3": "3px",
      "4": "4px",
      "8": "8px",
    },
    boxShadow: {
      sm: "0px 2px 2px rgba(0, 0, 0, 0.06)",
      DEFAULT: "0px 4px 4px rgba(0, 0, 0, 0.06)",
      md: "0px 6px 6px rgba(0, 0, 0, 0.06)",
      lg: "0px 32px 64px -12px rgba(85, 105, 135, 0.08)",
      xl: "0px 40px 100px #F6F7FA",
      inner: "inset 0px 4px 4px rgba(0, 0, 0, 0.06)",
      none: "none",
    },
    caretColor: (theme) => theme("colors"),
    contrast: {
      0: "0",
      50: ".5",
      75: ".75",
      100: "1",
      125: "1.25",
      150: "1.5",
      200: "2",
    },
    container: {},
    cursor: {
      auto: "auto",
      DEFAULT: "default",
      pointer: "pointer",
      wait: "wait",
      text: "text",
      move: "move",
      "not-allowed": "not-allowed",
    },
    divideColor: (theme) => theme("borderColor"),
    divideOpacity: (theme) => theme("borderOpacity"),
    divideWidth: (theme) => theme("borderWidth"),
    dropShadow: {
      sm: "0 1px 1px rgba(0,0,0,0.05)",
      DEFAULT: [
        "0 1px 2px rgba(0, 0, 0, 0.1)",
        "0 1px 1px rgba(0, 0, 0, 0.06)",
      ],
      md: ["0 4px 3px rgba(0, 0, 0, 0.07)", "0 2px 2px rgba(0, 0, 0, 0.06)"],
      lg: ["0 10px 8px rgba(0, 0, 0, 0.04)", "0 4px 3px rgba(0, 0, 0, 0.1)"],
      xl: ["0 20px 13px rgba(0, 0, 0, 0.03)", "0 8px 5px rgba(0, 0, 0, 0.08)"],
      "2xl": "0 25px 25px rgba(0, 0, 0, 0.15)",
      none: "0 0 #0000",
    },
    fill: {
      current: "currentColor",
    },
    grayscale: {
      0: "0",
      DEFAULT: "100%",
    },
    hueRotate: {
      "-180": "-180deg",
      "-90": "-90deg",
      "-60": "-60deg",
      "-30": "-30deg",
      "-15": "-15deg",
      0: "0deg",
      15: "15deg",
      30: "30deg",
      60: "60deg",
      90: "90deg",
      180: "180deg",
    },
    invert: {
      0: "0",
      DEFAULT: "100%",
    },
    flex: {
      "1": "1 1 0%",
      auto: "1 1 auto",
      initial: "0 1 auto",
      none: "none",
    },
    flexGrow: {
      "0": "0",
      DEFAULT: "1",
    },
    flexShrink: {
      "0": "0",
      DEFAULT: "1",
    },
    fontFamily: {
      body: 'Aspekta, "Sora", ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"',
      heading:
        'CabinetGrotesk, "Sora", ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"',
      sans: 'ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"',
      serif:
        '"Playfair Display", ui-serif, Georgia, Cambria, "Times New Roman", Times, serif',
      mono: 'ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace',
    },
    fontSize: {
      xs: ["0.75rem", { lineHeight: "1.5" }],
      sm: ["0.875rem", { lineHeight: "1.5" }],
      base: ["1rem", { lineHeight: "1.5" }],
      lg: ["1.125rem", { lineHeight: "1.55" }],
      xl: ["1.25rem", { lineHeight: "2rem" }],
      "2xl": ["1.5rem", { lineHeight: "2rem" }],
      "3xl": ["1.875rem", { lineHeight: "2rem" }],
      "4xl": ["2.25rem", { lineHeight: "1.25" }],
      "5xl": ["3rem", { lineHeight: "1.25" }],
      "6xl": ["3.75rem", { lineHeight: "1" }],
      "7xl": ["4.5rem", { lineHeight: "1" }],
      "8xl": ["5rem", { lineHeight: "1" }],
      "9xl": ["5.5rem", { lineHeight: "1" }],
      "10xl": ["6rem", { lineHeight: "1" }],
      "11xl": ["8rem", { lineHeight: "1" }],
      "12xl": ["9.75rem", { lineHeight: "1" }],
    },
    fontWeight: {
      hairline: "100",
      thin: "200",
      light: "300",
      normal: "400",
      medium: "500",
      semibold: "600",
      bold: "700",
      extrabold: "800",
      black: "900",
    },
    gap: (theme) => theme("spacing"),
    gradientColorStops: (theme) => theme("colors"),
    gridAutoColumns: {
      auto: "auto",
      min: "min-content",
      max: "max-content",
      fr: "minmax(0, 1fr)",
    },
    gridAutoRows: {
      auto: "auto",
      min: "min-content",
      max: "max-content",
      fr: "minmax(0, 1fr)",
    },
    gridColumn: {
      auto: "auto",
      "span-1": "span 1 / span 1",
      "span-2": "span 2 / span 2",
      "span-3": "span 3 / span 3",
      "span-4": "span 4 / span 4",
      "span-5": "span 5 / span 5",
      "span-6": "span 6 / span 6",
      "span-7": "span 7 / span 7",
      "span-8": "span 8 / span 8",
      "span-9": "span 9 / span 9",
      "span-10": "span 10 / span 10",
      "span-11": "span 11 / span 11",
      "span-12": "span 12 / span 12",
      "span-full": "1 / -1",
    },
    gridColumnEnd: {
      auto: "auto",
      1: "1",
      2: "2",
      3: "3",
      4: "4",
      5: "5",
      6: "6",
      7: "7",
      8: "8",
      9: "9",
      10: "10",
      11: "11",
      12: "12",
      13: "13",
    },
    gridColumnStart: {
      auto: "auto",
      1: "1",
      2: "2",
      3: "3",
      4: "4",
      5: "5",
      6: "6",
      7: "7",
      8: "8",
      9: "9",
      10: "10",
      11: "11",
      12: "12",
      13: "13",
    },
    gridRow: {
      auto: "auto",
      "span-1": "span 1 / span 1",
      "span-2": "span 2 / span 2",
      "span-3": "span 3 / span 3",
      "span-4": "span 4 / span 4",
      "span-5": "span 5 / span 5",
      "span-6": "span 6 / span 6",
      "span-full": "1 / -1",
    },
    gridRowStart: {
      auto: "auto",
      1: "1",
      2: "2",
      3: "3",
      4: "4",
      5: "5",
      6: "6",
      7: "7",
    },
    gridRowEnd: {
      auto: "auto",
      1: "1",
      2: "2",
      3: "3",
      4: "4",
      5: "5",
      6: "6",
      7: "7",
    },
    gridTemplateColumns: {
      none: "none",
      1: "repeat(1, minmax(0, 1fr))",
      2: "repeat(2, minmax(0, 1fr))",
      3: "repeat(3, minmax(0, 1fr))",
      4: "repeat(4, minmax(0, 1fr))",
      5: "repeat(5, minmax(0, 1fr))",
      6: "repeat(6, minmax(0, 1fr))",
      7: "repeat(7, minmax(0, 1fr))",
      8: "repeat(8, minmax(0, 1fr))",
      9: "repeat(9, minmax(0, 1fr))",
      10: "repeat(10, minmax(0, 1fr))",
      11: "repeat(11, minmax(0, 1fr))",
      12: "repeat(12, minmax(0, 1fr))",
    },
    gridTemplateRows: {
      none: "none",
      1: "repeat(1, minmax(0, 1fr))",
      2: "repeat(2, minmax(0, 1fr))",
      3: "repeat(3, minmax(0, 1fr))",
      4: "repeat(4, minmax(0, 1fr))",
      5: "repeat(5, minmax(0, 1fr))",
      6: "repeat(6, minmax(0, 1fr))",
    },
    height: (theme) => ({
      auto: "auto",
      ...theme("spacing"),
      "1/2": "50%",
      "1/3": "33.333333%",
      "2/3": "66.666667%",
      "1/4": "25%",
      "2/4": "50%",
      "3/4": "75%",
      "1/5": "20%",
      "2/5": "40%",
      "3/5": "60%",
      "4/5": "80%",
      "1/6": "16.666667%",
      "2/6": "33.333333%",
      "3/6": "50%",
      "4/6": "66.666667%",
      "5/6": "83.333333%",
      full: "100%",
      screen: "100vh",
    }),
    inset: (theme, { negative }) => ({
      auto: "auto",
      ...theme("spacing"),
      ...negative(theme("spacing")),
      "1/2": "50%",
      "1/3": "33.333333%",
      "2/3": "66.666667%",
      "1/4": "25%",
      "2/4": "50%",
      "3/4": "75%",
      full: "100%",
      "-1/2": "-50%",
      "-1/3": "-33.333333%",
      "-2/3": "-66.666667%",
      "-1/4": "-25%",
      "-2/4": "-50%",
      "-3/4": "-75%",
      "-full": "-100%",
    }),
    keyframes: {
      endless: {
        "0%": { transform: "translateY(0)" },
        "100%": { transform: "translateY(-245px)" },
      },
      spin: {
        to: {
          transform: "rotate(360deg)",
        },
      },
      ping: {
        "75%, 100%": {
          transform: "scale(2)",
          opacity: "0",
        },
      },
      pulse: {
        "50%": {
          opacity: ".5",
        },
      },
      bounce: {
        "0%, 100%": {
          transform: "translateY(-25%)",
          animationTimingFunction: "cubic-bezier(0.8,0,1,1)",
        },
        "50%": {
          transform: "none",
          animationTimingFunction: "cubic-bezier(0,0,0.2,1)",
        },
      },
      fadeInLeft: {
        from: {
          opacity: "0",
          transform: "translate3d(-100%, 0, 0)",
        },
        to: {
          opacity: "1",
          transform: "translate3d(0, 0, 0)",
        },
      },
      fadeInRight: {
        from: {
          opacity: "0",
          transform: "translate3d(100%, 0, 0)",
        },
        to: {
          opacity: "1",
          transform: "translate3d(0, 0, 0)",
        },
      },
      fadeInUp: {
        from: {
          opacity: "0",
          transform: "translate3d(0, 100%, 0)",
        },
        to: {
          opacity: "1",
          transform: "translate3d(0, 0, 0)",
        },
      },
      fadeInDown: {
        from: {
          opacity: "0",
          transform: "translate3d(0, -100%, 0)",
        },
        to: {
          opacity: "1",
          transform: "translate3d(0, 0, 0)",
        },
      },
      fadeIn: {
        from: {
          opacity: "0",
        },

        to: {
          opacity: "1",
        },
      },
      bounceIn: {
        "from, 20%, 40%, 60%, 80%, to": {
          animationTimingFunction: "cubic-bezier(0.215, 0.61, 0.355, 1)",
        },
        "0%": {
          opacity: "0",
          transform: "scale3d(0.3, 0.3, 0.3)",
        },
        "20%": {
          transform: "scale3d(1.1, 1.1, 1.1)",
        },
        "40%": {
          transform: "scale3d(0.9, 0.9, 0.9)",
        },
        "60%": {
          opacity: "1",
          transform: "scale3d(1.03, 1.03, 1.03)",
        },
        "80%": {
          transform: "scale3d(0.97, 0.97, 0.97)",
        },
        to: {
          opacity: "1",
          transform: "scale3d(1, 1, 1)",
        },
      },
      bounceInDown: {
        "from, 60%, 75%, 90%, to": {
          animationTimingFunction: "cubic-bezier(0.215, 0.61, 0.355, 1)",
        },
        "0%": {
          opacity: "0",
          transform: "translate3d(0, -3000px, 0) scaleY(3)",
        },
        "60%": {
          opacity: "1",
          transform: "translate3d(0, 25px, 0) scaleY(0.9)",
        },
        "75%": {
          transform: "translate3d(0, -10px, 0) scaleY(0.95)",
        },
        "90%": {
          transform: "translate3d(0, 5px, 0) scaleY(0.985)",
        },
        to: {
          transform: "transform: translate3d(0, 0, 0)",
        },
      },
    },
  },
  corePlugins: {},
  plugins: [
    plugin(function ({ matchUtilities, theme }) {
      matchUtilities(
        {
          "text-shadow": (value) => ({
            textShadow: value,
          }),
        },
        { values: theme("textShadow") },
      );
    }),
  ],
} satisfies Config;
